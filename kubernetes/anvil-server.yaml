apiVersion: v1
kind: ServiceAccount
metadata:
  name: anvil-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: anvil-server
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list", "create", "delete", "deletecollection", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: anvil-server
  namespace: default
subjects:
- kind: ServiceAccount
  name: anvil-server
  namespace: default
roleRef:
  kind: Role
  name: anvil-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anvil-server
spec:
  selector:
    matchLabels:
      app: anvil-server
  replicas: 1
  template:
    metadata:
      labels:
        app: anvil-server
    spec:
      serviceAccountName: anvil-server
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - uvicorn
        args: ["--host", "127.0.0.1", "--port", "7283", "--workers", "16", "anvil_server.server:app"]
        env:
        - name: BACKEND
          value: kubernetes
        ports:
        - containerPort: 7283
        image: "gcr.io/paradigmctf/infra/paradigmctf.py:latest"
        imagePullPolicy: IfNotPresent
        name: container
        securityContext:
          allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anvil-proxy
spec:
  selector:
    matchLabels:
      app: anvil-proxy
  replicas: 4
  template:
    metadata:
      labels:
        app: anvil-proxy
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - uvicorn
        args: ["--host", "127.0.0.1", "--port", "8545", "--workers", "16", "anvil_server.proxy:app"]
        env:
        - name: BACKEND
          value: kubernetes
        ports:
        - containerPort: 7283
        image: "gcr.io/paradigmctf/infra/paradigmctf.py:latest"
        imagePullPolicy: IfNotPresent
        name: container
        securityContext:
          allowPrivilegeEscalation: false
